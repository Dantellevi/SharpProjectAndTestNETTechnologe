//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.CalcService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcService.ISummator")]
    public interface ISummator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetSum", ReplyAction="http://tempuri.org/ISummator/GetSumResponse")]
        int GetSum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetSum", ReplyAction="http://tempuri.org/ISummator/GetSumResponse")]
        System.Threading.Tasks.Task<int> GetSumAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISummatorChannel : WebClient.CalcService.ISummator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SummatorClient : System.ServiceModel.ClientBase<WebClient.CalcService.ISummator>, WebClient.CalcService.ISummator {
        
        public SummatorClient() {
        }
        
        public SummatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SummatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SummatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SummatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetSum(int x, int y) {
            return base.Channel.GetSum(x, y);
        }
        
        public System.Threading.Tasks.Task<int> GetSumAsync(int x, int y) {
            return base.Channel.GetSumAsync(x, y);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcService.IMultiplexor")]
    public interface IMultiplexor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplexor/GetMultiply", ReplyAction="http://tempuri.org/IMultiplexor/GetMultiplyResponse")]
        int GetMultiply(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplexor/GetMultiply", ReplyAction="http://tempuri.org/IMultiplexor/GetMultiplyResponse")]
        System.Threading.Tasks.Task<int> GetMultiplyAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplexorChannel : WebClient.CalcService.IMultiplexor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplexorClient : System.ServiceModel.ClientBase<WebClient.CalcService.IMultiplexor>, WebClient.CalcService.IMultiplexor {
        
        public MultiplexorClient() {
        }
        
        public MultiplexorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultiplexorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplexorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplexorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetMultiply(int x, int y) {
            return base.Channel.GetMultiply(x, y);
        }
        
        public System.Threading.Tasks.Task<int> GetMultiplyAsync(int x, int y) {
            return base.Channel.GetMultiplyAsync(x, y);
        }
    }
}
